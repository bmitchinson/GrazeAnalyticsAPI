swagger: '2.0'
info:
  description: The API powering Graze Analytics apricot frontend
  version: 0.0.1
  title: Graze Analytics
  # put the contact info for your development or API team
  contact:
    # TODO: Update with company email
    email: you@your-company.com
  license:
    # TODO: Need to update license with Daniels findings
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /feedback:
    get:
      summary: searches all feedback
      operationId: searchFeedback
      description: |
        A filter style query of all collected feedback in the system.
      produces:
      - application/json
      parameters:
      - in: query
        name: restaurantId
        description: pass in the restaurant id that you'd like feedback for
        required: true
        type: integer
      - in: query
        name: orderId
        description: filter by order id number
        required: false
        type: integer
      - in: query
        name: menuItemId
        description: filter by menu item id number
        required: false
        type: integer
      - in: query
        name: serverId
        description: filter by server id number
        required: false
        type: integer
      - in: query
        name: serverName
        description: attempt to filter by server name
        required: false
        type: integer
        ## TODO: Server table route for populating name suggestions
      - in: query
        name: tableId
        description: filter by table id number
        required: false
        type: integer
      - in: query
        name: starRatingValue
        description: filter by rating number
        required: false
        type: integer
      - in: query
        name: hasStarRating
        description: filter based on the existance of a star rating on the feedback
        required: false
        type: boolean
      - in: query
        name: hasComment
        description: filter based on the existance of a comment on the feedback
        required: false
        type: boolean
        
      responses:
        200:
          description: search results matching criteria
          schema:
            type: array
            items:
              $ref: '#/definitions/Feedback'
        400:
          description: bad input parameter
    # post:
    #   tags:
    #   - admins
    #   summary: adds an inventory item
    #   operationId: addInventory
    #   description: Adds an item to the system
    #   consumes:
    #   - application/json
    #   produces:
    #   - application/json
    #   parameters:
    #   - in: body
    #     name: inventoryItem
    #     description: Inventory item to add
    #     schema:
    #       $ref: '#/definitions/InventoryItem'
    #   responses:
    #     201:
    #       description: item created
    #     400:
    #       description: invalid input, object invalid
    #     409:
    #       description: an existing item already exists

definitions:
  Feedback:
    required:
    - id
    - restaurant_id
    - order_id
    properties:
      id:
        type: integer
      restaurant_id:
        type: integer
      order_id:
        type: integer
      menu_item_id:
        type: integer
      server_id:
        type: integer
      table_id:
        type: integer
      star_rating:
        type: integer
        example: 4
      comment:
        type: string
        example: "Service was great!"